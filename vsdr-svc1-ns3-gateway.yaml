apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: helloworld-svc1-ns3-gateway
  namespace: ns3
spec:
  hosts:
    - ns3site.svc1.helloworld.com
  gateways:
  - istio-system/my-gateway  
# http routing rules are listed by names here and the order is important, any of them is matched first, it will go through and then the rest will be ignored
  http:

    - name: v2-route 
      match:      
      - uri:
          prefix: /v2
      rewrite:
        uri: /     
      route:
        - destination:
            host: helloworld-svc1.ns1.svc.cluster.local
            subset: v2   

    - name: v1-route        
      match:      
      - uri:
          prefix: /v1
      rewrite:
        uri: /     
      route:
        - destination:
            host: helloworld-svc1.ns1.svc.cluster.local
            subset: v1

    - name: source-namespace-route
      match:      
      - sourceNamespace: ns3
      route:
       - destination:
          host: helloworld-svc1.ns1.svc.cluster.local
          subset: v2

    - name: source-podlabel-route
      match:      
      - sourceLabels:
          mylabel: mypod1
      route:
       - destination:
          host: helloworld-svc1.ns1.svc.cluster.local
          subset: v1

    - name: header-route
      match:
      - headers:
         end-user:
           exact: jason 
      route:
        - destination:
           host: helloworld-svc1.ns1.svc.cluster.local
           subset: v2
   
    - name: default-route        
      route:
      - destination:
          host: helloworld-svc1.ns1.svc.cluster.local
          subset: v1
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: helloworld-svc1-ns3-gateway
  namespace: ns3
spec:
  host: helloworld-svc1.ns1.svc.cluster.local # host is the target kubernetes service; this could be a host/service defined by Service Entry too
  subsets:
  - name: v1
    labels:
      version: v1
  - name: v2
    labels:
      version: v2